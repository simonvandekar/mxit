scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = .785) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = .785) +
theme_minimal()
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = 1) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = 0) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -.785) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1.2) +
theme_minimal() #+
pi/2
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1.57) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1.4) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1.3) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1.35) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1.33) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1.32) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 UTC"))+
coord_polar(start = -1.31) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50))+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() #+
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() +
theme(axis.title.x = element_text(angle = 90),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal()
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous("",breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() +
theme(axis.title.y = element_text(angle = 90)
axis.text.y = element_text(),
axis.text.x = element_blank())
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous("",breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() +
theme(axis.title.y = element_text(angle = 90),
axis.text.y = element_text(),
axis.text.x = element_blank())
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous("",breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() +
theme(axis.title.y = element_text(angle = 90),
axis.text.y = element_text(hjust=-5),
axis.text.x = element_text())
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous("",breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() +
theme(axis.title.y = element_text(angle = 180),
axis.text.y = element_text(hjust=-5),
axis.text.x = element_text(angle=90))
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous("",breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() +
theme(axis.title.y = element_text(angle = 180),
axis.text.y = element_text(hjust=-5),
axis.text.x = element_text(angle=180))
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous("",breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() +
theme(axis.title.y = element_text(angle = 180),
axis.text.y = element_text(hjust=-.9))
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
ggplot(ng, aes(x=time,y=impression,width=.15)) +
geom_histogram(stat = 'identity',fill="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits=c(0,50),position = "right")+
scale_x_continuous(breaks=brks,minor_breaks = NULL,labels = paste0(brks,":00 EST"))+
coord_polar(start = -1.31) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
plot(ng$display_text_width,ng$impression)
ggplot(ng,aes(display_text_width,impression)) + geom_point()
ggplot(ng,aes(display_text_width,impression)) + geom_point() +geom_smooth()
ggplot(ng,aes(display_text_width,impression)) + geom_point() +geom_smooth() + facet_wrap(~ix_media)
m1 = subset(ng, ng$ix_media == 0)
m2 = subset(ng, ng$ix_media == 1)
mean(m1$impression)
mean(m1$impression);sd(m1$impression)
mean(m2$impression);sd(m2$impression)
ggplot(ng,aes(x=ix_media,y=impression)) + geom_boxplot()
ggplot(ng,aes(x=factor(ix_media),y=impression)) + geom_boxplot()
ggplot(ng,aes(x=factor(ix_media),y=impression)) + geom_violin()
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,100))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,50))
ggplot(ng,aes(x=factor(ix_media),y=log(impression))) +
geom_violin() +
scale_y_continuous(limits = c(0,50))
ggplot(ng,aes(x=factor(ix_media),y=log(impression))) +
geom_violin() +
scale_y_continuous(limits = c(0,10))
ggplot(ng,aes(x=factor(ix_media),y=log(impression))) +
geom_violin() +
scale_y_continuous(limits = c(0,5))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,5))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,10))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,25))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,35))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,100))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,50))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,50)) +
scale_color_manual(values = c("green",
"#3F4CEC"))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin() +
scale_y_continuous(limits = c(0,50)) +
scale_fill_manual(values = c("green",
"#3F4CEC"))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("#3F4CEC")) +
scale_y_continuous(limits = c(0,50)) +
scale_fill_manual(values = c("green",
))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("#3F4CEC")) +
scale_y_continuous(limits = c(0,50))
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("#3F4CEC"),color="white") +
scale_y_continuous(limits = c(0,50)) +
theme_minimal()
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("#3F4CEC"),color="gray") +
scale_y_continuous(limits = c(0,50)) +
theme_minimal()
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("#3F4CEC"),color="gray") +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
theme_minimal() +
scale_x_continuous("Image or Link in Tweet")
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("#3F4CEC"),color="gray") +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
theme_minimal() +
scale_x_discrete("Image or Link in Tweet")
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("graty"),color="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
theme_minimal() +
scale_x_discrete("Image or Link in Tweet")
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("gray"),color="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
theme_minimal() +
scale_x_discrete("Image or Link in Tweet")
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("gray30"),color="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
theme_minimal() +
scale_x_discrete("Image or Link in Tweet")
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("gray45"),color="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
theme_minimal() +
scale_x_discrete("Image or Link in Tweet")
ng$ix_media = ifelse(is.na(ng$media_url) & is.na(ng$urls_url), "No", "Yes")
## get most recent 500 tweets
ng = rtweet::get_timeline(user,n = 500)
## --- clean dataset
## choosing relevant columns, subset data
relevant_cols = c("created_at","text","display_text_width",
"favorite_count","retweet_count","hashtags",
"urls_url","media_url")
ng = ng[,relevant_cols]
## generate indicators of media (link, picture, link or picture, link or picture)
ng$ix_link = ifelse(is.na(ng$urls_url), 0, 1)
ng$ix_pic = ifelse(is.na(ng$media_url), 0, 1)
ng$ix_media = ifelse(is.na(ng$media_url) & is.na(ng$urls_url), "No", "Yes")
## generate indicator of interaction
ng$impression = ng$favorite_count + ng$retweet_count
## remove outlier tweet
ng = ng[-c(597),]
## create time variable
ng$time = hour(ng$created_at) + minute(ng$created_at)/60 - 5
brks = c(0,6,12,18,24)
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("gray45"),color="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
theme_minimal() +
scale_x_discrete("Image or Link in Tweet")
ggplot(ng,aes(x=factor(ix_media),y=impression)) +
geom_violin(fill = c("white"),color="#3F4CEC") +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
theme_minimal() +
scale_x_discrete("Image or Link in Tweet")
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point()
## remove outlier tweet
ng = ng[-c(597),]
## create time variable
ng$time = hour(ng$created_at) + minute(ng$created_at)/60 - 5
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point()
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous(limits = c(0,100))
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous(limits = c(0,100)) +
geom_smooth()
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,100)) +
geom_smooth()
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,100)) +
geom_smooth(se = FALSE,color = "#3F4CEC")
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,100)) +
geom_smooth(se = FALSE,color = "#3F4CEC") +
scale_x_continuous("Tweet Length")
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
geom_smooth(se = FALSE,color = "#3F4CEC") +
scale_x_continuous("Tweet Length")
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
geom_smooth(se = FALSE,color = "#3F4CEC") +
scale_x_continuous("Tweet Length") +
theme_minimal()
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
geom_smooth(se = FALSE,color = "#3F4CEC",lwd=2) +
scale_x_continuous("Tweet Length") +
theme_minimal()
ggplot(ng,aes(x=display_text_width,y=impression)) +
geom_point() +
scale_y_continuous("Number of\nTwitter Impressions",limits = c(0,50)) +
geom_smooth(se = FALSE,color = "#3F4CEC",lwd=1.5) +
scale_x_continuous("Tweet Length") +
theme_minimal()
ng$hashtags
unique(ng$hashtags)
unlist(ng$hashtags)
unique(unlist(ng$hashtags))
htags = unique(unlist(ng$hashtags))
grepl(htags[1],ng$hashtags)
sum(grepl(htags[1],ng$hashtags))
lapply(1:length(htags), function(i) sum(grepl(htags[i],ng$hashtags)))
unlist(lapply(1:length(htags), function(i) sum(grepl(htags[i],ng$hashtags))))
sort(unlist(lapply(1:length(htags), function(i) sum(grepl(htags[i],ng$hashtags)))))
htags.n = unlist(lapply(1:length(htags), function(i) sum(grepl(htags[i],ng$hashtags))))
htags[htags.n >= 10]
!is.na(htags[htags.n >= 10])
htags.rel = htags[htags.n >= 10]
htags.rel = htags.rel[!is.na(htags.rel)]
i=1
which(grepl(htags.rel[i],ng$hashtags))
ng[which(grepl(htags.rel[i],ng$hashtags)),]$impression
mean(ng[which(grepl(htags.rel[i],ng$hashtags)),]$impression)
lapply(1:length(htags.rel), function(i) mean(ng[which(grepl(htags.rel[i],ng$hashtags)),]$impression))
unlist(lapply(1:length(htags.rel),
function(i) mean(ng[which(grepl(htags.rel[i],ng$hashtags)),]$impression)))
htags.se = unlist(lapply(1:length(htags.rel),
function(i) sd(ng[which(grepl(htags.rel[i],ng$hashtags)),]$impression)))
htags.mu = unlist(lapply(1:length(htags.rel),
function(i) mean(ng[which(grepl(htags.rel[i],ng$hashtags)),]$impression)))
htags.mu
htags.se
htag.df = cbind(htags.rel,htags.mu,htags.se)
class(htag.df[,1])
class(htag.df[,2])
class(htag.df[,3])
htag.df = data.frame(cbind(htags.rel,htags.mu,htags.se))
View(htag.df)
class(htag.df[,3])
colnames(htag.df) = c("Hashtag","mean","se")
as.numeric(as.character(htag.df$mean))
htag.df$mean = as.numeric(as.character(htag.df$mean))
htag.df$se = as.numeric(as.character(htag.df$se))
ggplot(htag.df,aes(x=Hashtag,y=mean)) + geom_point()
htag.df$ub = htag.df$mean + 1.96*htag.df$se
htag.df$lb = htag.df$mean - 1.96*htag.df$se
ggplot(htag.df,aes(x=Hashtag,y=mean)) +
geom_point() +
geom_errorbar(aes(x=mean,ymin=lb,ymax=ub))+
scale_y_continuous(ylim = c(0,30))
ggplot(htag.df,aes(x=Hashtag,y=mean)) +
geom_point() +
geom_errorbar(aes(x=mean,ymin=lb,ymax=ub))
ggplot(htag.df,aes(x=Hashtag,y=mean)) +
geom_point() +
geom_errorbar(aes(x=Hashtag,y=mean,ymin=lb,ymax=ub))+
scale_y_continuous(ylim = c(0,30))
ggplot(htag.df,aes(x=Hashtag,y=mean)) +
geom_point() +
geom_errorbar(aes(x=Hashtag,y=mean,ymin=lb,ymax=ub))
ggplot(htag.df,aes(x=Hashtag,y=mean)) +
geom_point() +
geom_errorbar(aes(x=Hashtag,y=mean,ymin=lb,ymax=ub),width=0)+
scale_y_continuous(limits = c(0,30))
ggplot(htag.df,aes(x=Hashtag,y=mean)) +
geom_point() +
geom_errorbar(aes(x=Hashtag,y=mean,ymin=lb,ymax=ub),width=0.1)+
scale_y_continuous(limits = c(0,30))
ggplot(htag.df,aes(x=Hashtag,y=mean)) +
geom_point() +
geom_errorbar(aes(x=Hashtag,y=mean,ymin=lb,ymax=ub),width=0.1)
log(1.06)
log(1.12)
log(1.05)
log(1.11)
log(1.24)
log(1.06)
## local access to test data
path.imgs = "~/Documents/Current/Research/mxit/test-dat"
imgs.test = list.files(path.imgs,pattern="tif$",full.names = TRUE,recursive = TRUE)
## local access to test epi masks
path.masks = "~/Documents/Current/Research/mxit/test-masks"
masks.test = list.files(path.masks,pattern="png$",full.names = TRUE,recursive = TRUE)
## ----- PACKAGES
require(parallel)
require(ANTsR)
require(raster)
require(ggplot2)
require(stringr)
require(viridis)
require(spatstat)
## ----- IMPORT FUNCTIONS
setwd("~/Documents/Current/Research/mxit/R")
source("biasCorrect.R")
source("imageDensity.R")
source("plotDensity.R")
i1 = imgs.test[1]
m1 = masks.test[1]
splineParam=2000
image = raster::stack(i1)
mask = raster::raster(m1)
out = n4BiasFieldCorrection(img=as.antsImage(as.matrix(image)),
mask=as.antsImage(as.matrix(mask)),
splineParam = splineParam)
## access to all images
# path.all = "~/Box/multiplex/MxIF\ Data/H051_Ileum_H_1/AFRemoved"
# imgs.all = list.files(path.all,pattern="tif$",full.names = TRUE,recursive = TRUE)
## local access to test data
path.imgs = "~/Documents/Current/Research/mxit/test-dat"
imgs.test = list.files(path.imgs,pattern="tif$",full.names = TRUE,recursive = TRUE)
## local access to test epi masks
path.masks = "~/Documents/Current/Research/mxit/test-masks"
masks.test = list.files(path.masks,pattern="png$",full.names = TRUE,recursive = TRUE)
## ----- PACKAGES
require(parallel)
require(ANTsR)
require(raster)
require(ggplot2)
require(stringr)
require(viridis)
require(spatstat)
## ----- IMPORT FUNCTIONS
setwd("~/Documents/Current/Research/mxit/R")
source("biasCorrect.R")
source("imageDensity.R")
source("plotDensity.R")
#find deltas
img_bc = biasCorrect(imgs.test[i],
masks.test[i],
simple=TRUE,
splineParam = 5000)
i=1
#find deltas
img_bc = biasCorrect(imgs.test[i],
masks.test[i],
simple=TRUE,
splineParam = 5000)
img_og = raster(as.matrix(raster(imgs.test[i])))
name_var = stringr::str_extract(imgs.test[i],"[ \\w-]+?(?=\\.)")
img_del = img_og - img_bc
writeRaster(img_bc, paste0("../test-results/",name_var,"_bias_correct.tif"))
writeRaster(img_del, paste0("../test-results/",name_var,"_delta.tif"))
